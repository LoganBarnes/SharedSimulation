language: c++
compiler: clang

branches:
  only:
    - master

os:
  - linux
  - osx

sudo: false

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.8.0
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.9.0

addons:
  apt:
    packages:
      - g++-5
      - g++-6
    sources: &sources
      - ubuntu-toolchain-r-test
      - kubuntu-backports

env:
  - LLVM_VERSION=llvm-3.8.0 BUILD_MODE=Release TESTING=ON SHARED_LIBS=OFF
  - LLVM_VERSION=llvm-3.9.0 BUILD_MODE=Release TESTING=ON SHARED_LIBS=OFF
  - COMPILER=g++-5 BUILD_MODE=Release TESTING=ON SHARED_LIBS=OFF
  - COMPILER=g++-6 BUILD_MODE=Release TESTING=ON SHARED_LIBS=OFF
  - LLVM_VERSION=default BUILD_MODE=Release TESTING=ON  SHARED_LIBS=OFF"
  # - LLVM_VERSION=default BUILD_MODE=Release TESTING=ON  SHARED_LIBS=ON"
  # - LLVM_VERSION=default BUILD_MODE=Release TESTING=OFF SHARED_LIBS=OFF"
  # - LLVM_VERSION=default BUILD_MODE=Release TESTING=OFF SHARED_LIBS=ON"
  # - LLVM_VERSION=default BUILD_MODE=Debug   TESTING=ON  SHARED_LIBS=OFF"
  # - LLVM_VERSION=default BUILD_MODE=Debug   TESTING=ON  SHARED_LIBS=ON"
  # - LLVM_VERSION=default BUILD_MODE=Debug   TESTING=OFF SHARED_LIBS=OFF"
  # - LLVM_VERSION=default BUILD_MODE=Debug   TESTING=OFF SHARED_LIBS=ON"

install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}



  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew upgrade cmake || brew install cmake
    fi
  - cmake --version


  ############################################################################
  # Install Clang, libc++ and libc++abi
  ############################################################################
  - |
    if [[ "${LLVM_VERSION}" != "" ]]; then
      LLVM_DIR=${DEPS_DIR}/llvm-${LLVM_VERSION}
      if [[ -z "$(ls -A ${LLVM_DIR})" ]]; then
        LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
        LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
        LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
        CLANG_URL="http://llvm.org/releases/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz"
        mkdir -p ${LLVM_DIR} ${LLVM_DIR}/build ${LLVM_DIR}/projects/libcxx ${LLVM_DIR}/projects/libcxxabi ${LLVM_DIR}/clang
        travis_retry wget --quiet -O - ${LLVM_URL}      | tar --strip-components=1 -xJ -C ${LLVM_DIR}
        travis_retry wget --quiet -O - ${LIBCXX_URL}    | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxx
        travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxxabi
        travis_retry wget --quiet -O - ${CLANG_URL}     | tar --strip-components=1 -xJ -C ${LLVM_DIR}/clang
        (cd ${LLVM_DIR}/build && cmake .. -DCMAKE_INSTALL_PREFIX=${LLVM_DIR}/install -DCMAKE_CXX_COMPILER=clang++)
        (cd ${LLVM_DIR}/build/projects/libcxx && make install -j2)
        (cd ${LLVM_DIR}/build/projects/libcxxabi && make install -j2)
      fi
      export CXXFLAGS="-nostdinc++ -isystem ${LLVM_DIR}/install/include/c++/v1"
      export LDFLAGS="-L ${LLVM_DIR}/install/lib -l c++ -l c++abi"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_DIR}/install/lib"
      export PATH="${LLVM_DIR}/clang/bin:${PATH}"
    fi
  - ${CXX} --version


  ############################################################################
  # Install a CUDA
  ############################################################################
  # - |
  #   if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then source .travis/install-cuda-trusty.sh; fi

before_script:
  - cd ${TRAVIS_BUILD_DIR}

script:
  - mkdir _build
  - cd _build
  - cmake -DSTRICT_FLAGS=ON -DUSE_GLFW=ON -DUSE_GLM=ON -DUSE_GUI=ON -DBUILD_SHARED_TESTS=$TESTING -DCMAKE_BUILD_TYPE=$BUILD_MODE -DBUILD_SHARED_LIBS=$SHARED_LIBS ..
  - cmake --build .

notifications:
  on_success: never
  on_failure: always